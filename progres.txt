Установил библиотки: fastapi uvicorn sqlalchemy и aiosqlite
Fastapi -  асинхронный фреймоврк
Pydantic - библиотека для валидации и сериализации данных
Uvicorn - для запуска веб сервера
SqlAlchemy - библиотека для работы с реалициооными бд
Aiosqlite - асинхронный драйвер для работы с легковесной бд

1) Простое приложени:
app=FastAPI()

@app.get("/") - применится к функции если путем будет корень
async def home():
    return {"data": "hello world"} - возвращает словарь

в терминале uvicorn main:app --reload - запускает сервер

2) Добавленны две схемы в schemas.py 
схема STaskAdd - для добавления
схема STask - для чтения
также добавлен метод post("/") который добавляет задачу

при добавление Depends() - ???????????????


3) Работа с бд
Создал engine и фабрику сессий в файле database.py
Создал модели(таблицы) в файле models.py
Добавил функции create/delete_table в файл database.py
Добавлен жизненный цикл приложения, при запуске созадются таблицы при закрыти удаляются

Запросы к бд:
Для создания запросов используем SQLAlchemy ORM который позволяет оперировать экземплярами
классов как реальными строками бд в файле repository.py

